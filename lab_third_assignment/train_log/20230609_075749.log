2023/06/09 07:57:51 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jun  7 2023, 12:45:35) [GCC 9.4.0]
    CUDA available: True
    numpy_random_seed: 1411236111
    GPU 0: Tesla T4
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: x86_64-linux-gnu-gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
    PyTorch: 2.0.1+cu118
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2+cu118
    OpenCV: 4.7.0
    MMEngine: 0.7.1

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/09 07:57:52 - mmengine - INFO - Config:
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=5),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=10, max_keep_ckpts=2,
        save_best='auto'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=40,
    val_interval=10,
    dynamic_intervals=[(280, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0, end=30),
    dict(
        type='CosineAnnealingLR',
        eta_min=7.8125e-06,
        begin=20,
        end=40,
        T_max=20,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.00015625, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=False, base_batch_size=16)
dataset_type = 'CocoDataset'
data_root = 'Drink_dataset/Drink_284_Detection_coco/'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='CachedMosaic',
        img_scale=(640, 640),
        pad_val=114.0,
        max_cached_images=20,
        random_pop=False),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=10,
        random_pop=False,
        pad_val=(114, 114, 114),
        prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=10,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='Drink_dataset/Drink_284_Detection_coco/',
        ann_file='train_coco.json',
        data_prefix=dict(img='images/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='CachedMosaic',
                img_scale=(640, 640),
                pad_val=114.0,
                max_cached_images=20,
                random_pop=False),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=10,
                random_pop=False,
                pad_val=(114, 114, 114),
                prob=0.5),
            dict(type='PackDetInputs')
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(220, 20, 60), (128, 64, 128), (244, 35, 232),
                     (70, 70, 70), (102, 102, 156), (190, 153, 153),
                     (153, 153, 153), (250, 170, 30), (220, 220, 0),
                     (107, 142, 35), (152, 251, 152)])),
    pin_memory=False)
val_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='Drink_dataset/Drink_284_Detection_coco/',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(220, 20, 60), (128, 64, 128), (244, 35, 232),
                     (70, 70, 70), (102, 102, 156), (190, 153, 153),
                     (153, 153, 153), (250, 170, 30), (220, 220, 0),
                     (107, 142, 35), (152, 251, 152)])))
test_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='Drink_dataset/Drink_284_Detection_coco/',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(220, 20, 60), (128, 64, 128), (244, 35, 232),
                     (70, 70, 70), (102, 102, 156), (190, 153, 153),
                     (153, 153, 153), (250, 170, 30), (220, 220, 0),
                     (107, 142, 35), (152, 251, 152)])))
val_evaluator = dict(
    type='CocoMetric',
    ann_file='Drink_dataset/Drink_284_Detection_coco/val_coco.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file='Drink_dataset/Drink_284_Detection_coco/val_coco.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
img_scales = [(640, 640), (320, 320), (960, 960)]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }], [{
                        'type': 'LoadAnnotations',
                        'with_bbox': True
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.167,
        widen_factor=0.375,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
        ),
        frozen_stages=4),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[96, 192, 384],
        out_channels=96,
        num_csp_blocks=1,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=10,
        in_channels=96,
        stacked_convs=2,
        feat_channels=96,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=False,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
max_epochs = 40
stage2_num_epochs = 20
base_lr = 0.00015625
interval = 10
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=35,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
checkpoint = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
metainfo = dict(
    classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice', 'scream',
             'milk', 'red', 'king'),
    palette=[(220, 20, 60), (128, 64, 128), (244, 35, 232), (70, 70, 70),
             (102, 102, 156), (190, 153, 153), (153, 153, 153), (250, 170, 30),
             (220, 220, 0), (107, 142, 35), (152, 251, 152)])
num_classes = 10
train_batch_size_per_gpu = 10
train_num_workers = 2
val_batch_size_per_gpu = 1
val_num_workers = 2
num_epochs_stage2 = 5
launcher = 'none'
work_dir = './work_dirs/rtmdet_tiny_1xb12-40e_drink'

2023/06/09 07:57:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/09 07:57:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/06/09 07:57:55 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
2023/06/09 07:57:56 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([12, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.conv.weight - torch.Size([12, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.conv.weight - torch.Size([24, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.conv.weight - torch.Size([48, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([24, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([24, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.conv.weight - torch.Size([96, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.conv.weight - torch.Size([192, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.conv.weight - torch.Size([384, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([384, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

neck.reduce_layers.0.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([96, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([96, 384, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/06/09 07:57:57 - mmengine - INFO - Load checkpoint from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
2023/06/09 07:57:57 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/09 07:57:57 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/09 07:57:57 - mmengine - INFO - Checkpoints will be saved to /content/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drink.
2023/06/09 07:58:20 - mmengine - INFO - Epoch(train)  [1][ 5/23]  lr: 2.1553e-05  eta: 1:10:37  time: 4.6308  data_time: 4.0009  memory: 1392  loss: 2.6567  loss_cls: 1.9373  loss_bbox: 0.7194
2023/06/09 07:58:37 - mmengine - INFO - Epoch(train)  [1][10/23]  lr: 4.8492e-05  eta: 1:01:04  time: 4.0271  data_time: 3.5371  memory: 1392  loss: 2.6850  loss_cls: 1.9779  loss_bbox: 0.7071
2023/06/09 07:58:59 - mmengine - INFO - Epoch(train)  [1][15/23]  lr: 7.5432e-05  eta: 1:02:15  time: 4.1275  data_time: 3.6548  memory: 1392  loss: 2.6896  loss_cls: 1.9869  loss_bbox: 0.7027
2023/06/09 07:59:16 - mmengine - INFO - Epoch(train)  [1][20/23]  lr: 1.0237e-04  eta: 0:59:37  time: 3.9754  data_time: 3.5040  memory: 1392  loss: 2.7284  loss_cls: 2.0479  loss_bbox: 0.6805
2023/06/09 07:59:23 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 07:59:43 - mmengine - INFO - Epoch(train)  [2][ 5/23]  lr: 1.4547e-04  eta: 0:56:23  time: 3.7934  data_time: 3.3358  memory: 1392  loss: 2.7556  loss_cls: 2.0949  loss_bbox: 0.6607
2023/06/09 08:00:00 - mmengine - INFO - Epoch(train)  [2][10/23]  lr: 1.5625e-04  eta: 0:55:02  time: 3.7237  data_time: 3.2612  memory: 1392  loss: 2.7908  loss_cls: 2.1547  loss_bbox: 0.6362
2023/06/09 08:00:15 - mmengine - INFO - Epoch(train)  [2][15/23]  lr: 1.5625e-04  eta: 0:53:20  time: 3.6290  data_time: 3.1747  memory: 1392  loss: 2.8117  loss_cls: 2.1967  loss_bbox: 0.6149
2023/06/09 08:00:36 - mmengine - INFO - Epoch(train)  [2][20/23]  lr: 1.5625e-04  eta: 0:54:08  time: 3.7040  data_time: 3.2569  memory: 1392  loss: 2.8262  loss_cls: 2.2337  loss_bbox: 0.5926
2023/06/09 08:00:42 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:01:02 - mmengine - INFO - Epoch(train)  [3][ 5/23]  lr: 1.5625e-04  eta: 0:52:37  time: 3.5289  data_time: 3.1105  memory: 1392  loss: 2.8205  loss_cls: 2.2609  loss_bbox: 0.5596
2023/06/09 08:01:19 - mmengine - INFO - Epoch(train)  [3][10/23]  lr: 1.5625e-04  eta: 0:52:03  time: 3.5793  data_time: 3.1476  memory: 1392  loss: 2.8071  loss_cls: 2.2832  loss_bbox: 0.5240
2023/06/09 08:01:38 - mmengine - INFO - Epoch(train)  [3][15/23]  lr: 1.5625e-04  eta: 0:51:57  time: 3.5212  data_time: 3.0808  memory: 1392  loss: 2.7674  loss_cls: 2.2731  loss_bbox: 0.4943
2023/06/09 08:01:56 - mmengine - INFO - Epoch(train)  [3][20/23]  lr: 1.5625e-04  eta: 0:51:34  time: 3.5340  data_time: 3.0918  memory: 1392  loss: 2.6997  loss_cls: 2.2367  loss_bbox: 0.4630
2023/06/09 08:02:02 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:02:25 - mmengine - INFO - Epoch(train)  [4][ 5/23]  lr: 1.5625e-04  eta: 0:51:10  time: 3.5109  data_time: 3.0735  memory: 1392  loss: 2.5560  loss_cls: 2.1392  loss_bbox: 0.4169
2023/06/09 08:02:45 - mmengine - INFO - Epoch(train)  [4][10/23]  lr: 1.5625e-04  eta: 0:51:03  time: 3.5821  data_time: 3.1424  memory: 1392  loss: 2.4322  loss_cls: 2.0426  loss_bbox: 0.3896
2023/06/09 08:02:59 - mmengine - INFO - Epoch(train)  [4][15/23]  lr: 1.5625e-04  eta: 0:50:09  time: 3.5304  data_time: 3.1005  memory: 1392  loss: 2.2901  loss_cls: 1.9188  loss_bbox: 0.3713
2023/06/09 08:03:19 - mmengine - INFO - Epoch(train)  [4][20/23]  lr: 1.5625e-04  eta: 0:50:09  time: 3.5281  data_time: 3.0893  memory: 1392  loss: 2.1343  loss_cls: 1.7803  loss_bbox: 0.3540
2023/06/09 08:03:28 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:03:49 - mmengine - INFO - Epoch(train)  [5][ 5/23]  lr: 1.5625e-04  eta: 0:49:47  time: 3.5917  data_time: 3.1423  memory: 1392  loss: 1.9092  loss_cls: 1.5747  loss_bbox: 0.3345
2023/06/09 08:04:06 - mmengine - INFO - Epoch(train)  [5][10/23]  lr: 1.5625e-04  eta: 0:49:17  time: 3.6027  data_time: 3.1550  memory: 1392  loss: 1.7708  loss_cls: 1.4490  loss_bbox: 0.3219
2023/06/09 08:04:25 - mmengine - INFO - Epoch(train)  [5][15/23]  lr: 1.5625e-04  eta: 0:49:07  time: 3.6030  data_time: 3.1569  memory: 1392  loss: 1.6557  loss_cls: 1.3421  loss_bbox: 0.3136
2023/06/09 08:04:40 - mmengine - INFO - Epoch(train)  [5][20/23]  lr: 1.5625e-04  eta: 0:48:31  time: 3.5621  data_time: 3.1213  memory: 1392  loss: 1.5705  loss_cls: 1.2665  loss_bbox: 0.3039
2023/06/09 08:04:51 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:05:11 - mmengine - INFO - Epoch(train)  [6][ 5/23]  lr: 1.5625e-04  eta: 0:48:17  time: 3.6239  data_time: 3.1889  memory: 1392  loss: 1.4534  loss_cls: 1.1604  loss_bbox: 0.2930
2023/06/09 08:05:26 - mmengine - INFO - Epoch(train)  [6][10/23]  lr: 1.5625e-04  eta: 0:47:38  time: 3.5702  data_time: 3.1384  memory: 1392  loss: 1.4130  loss_cls: 1.1263  loss_bbox: 0.2866
2023/06/09 08:05:47 - mmengine - INFO - Epoch(train)  [6][15/23]  lr: 1.5625e-04  eta: 0:47:38  time: 3.6423  data_time: 3.2138  memory: 1392  loss: 1.3692  loss_cls: 1.0879  loss_bbox: 0.2813
2023/06/09 08:06:02 - mmengine - INFO - Epoch(train)  [6][20/23]  lr: 1.5625e-04  eta: 0:47:01  time: 3.5786  data_time: 3.1386  memory: 1392  loss: 1.3412  loss_cls: 1.0633  loss_bbox: 0.2779
2023/06/09 08:06:11 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:06:31 - mmengine - INFO - Epoch(train)  [7][ 5/23]  lr: 1.5625e-04  eta: 0:46:34  time: 3.5314  data_time: 3.0926  memory: 1392  loss: 1.2998  loss_cls: 1.0272  loss_bbox: 0.2726
2023/06/09 08:06:46 - mmengine - INFO - Epoch(train)  [7][10/23]  lr: 1.5625e-04  eta: 0:46:02  time: 3.5349  data_time: 3.0994  memory: 1392  loss: 1.2817  loss_cls: 1.0104  loss_bbox: 0.2713
2023/06/09 08:07:08 - mmengine - INFO - Epoch(train)  [7][15/23]  lr: 1.5625e-04  eta: 0:46:04  time: 3.5438  data_time: 3.1154  memory: 1392  loss: 1.2664  loss_cls: 0.9950  loss_bbox: 0.2713
2023/06/09 08:07:24 - mmengine - INFO - Epoch(train)  [7][20/23]  lr: 1.5625e-04  eta: 0:45:34  time: 3.5680  data_time: 3.1431  memory: 1392  loss: 1.2387  loss_cls: 0.9728  loss_bbox: 0.2659
2023/06/09 08:07:33 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:07:54 - mmengine - INFO - Epoch(train)  [8][ 5/23]  lr: 1.5625e-04  eta: 0:45:13  time: 3.5469  data_time: 3.1227  memory: 1392  loss: 1.2016  loss_cls: 0.9430  loss_bbox: 0.2586
2023/06/09 08:08:11 - mmengine - INFO - Epoch(train)  [8][10/23]  lr: 1.5625e-04  eta: 0:44:48  time: 3.5736  data_time: 3.1457  memory: 1392  loss: 1.1892  loss_cls: 0.9329  loss_bbox: 0.2564
2023/06/09 08:08:34 - mmengine - INFO - Epoch(train)  [8][15/23]  lr: 1.5625e-04  eta: 0:44:53  time: 3.6066  data_time: 3.1821  memory: 1392  loss: 1.1545  loss_cls: 0.9004  loss_bbox: 0.2541
2023/06/09 08:08:49 - mmengine - INFO - Epoch(train)  [8][20/23]  lr: 1.5625e-04  eta: 0:44:24  time: 3.6342  data_time: 3.2144  memory: 1392  loss: 1.1367  loss_cls: 0.8847  loss_bbox: 0.2520
2023/06/09 08:08:58 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:09:21 - mmengine - INFO - Epoch(train)  [9][ 5/23]  lr: 1.5625e-04  eta: 0:44:05  time: 3.6302  data_time: 3.2129  memory: 1392  loss: 1.1099  loss_cls: 0.8614  loss_bbox: 0.2485
2023/06/09 08:09:35 - mmengine - INFO - Epoch(train)  [9][10/23]  lr: 1.5625e-04  eta: 0:43:32  time: 3.6665  data_time: 3.2588  memory: 1392  loss: 1.0885  loss_cls: 0.8437  loss_bbox: 0.2448
2023/06/09 08:09:59 - mmengine - INFO - Epoch(train)  [9][15/23]  lr: 1.5625e-04  eta: 0:43:35  time: 3.6900  data_time: 3.2850  memory: 1392  loss: 1.0693  loss_cls: 0.8287  loss_bbox: 0.2406
2023/06/09 08:10:12 - mmengine - INFO - Epoch(train)  [9][20/23]  lr: 1.5625e-04  eta: 0:42:59  time: 3.6625  data_time: 3.2543  memory: 1392  loss: 1.0555  loss_cls: 0.8156  loss_bbox: 0.2399
2023/06/09 08:10:21 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:10:42 - mmengine - INFO - Epoch(train) [10][ 5/23]  lr: 1.5625e-04  eta: 0:42:35  time: 3.6241  data_time: 3.2069  memory: 1392  loss: 1.0347  loss_cls: 0.8002  loss_bbox: 0.2345
2023/06/09 08:10:59 - mmengine - INFO - Epoch(train) [10][10/23]  lr: 1.5625e-04  eta: 0:42:14  time: 3.6870  data_time: 3.2595  memory: 1392  loss: 1.0210  loss_cls: 0.7879  loss_bbox: 0.2331
2023/06/09 08:11:19 - mmengine - INFO - Epoch(train) [10][15/23]  lr: 1.5625e-04  eta: 0:42:00  time: 3.6261  data_time: 3.1973  memory: 1392  loss: 1.0081  loss_cls: 0.7768  loss_bbox: 0.2314
2023/06/09 08:11:39 - mmengine - INFO - Epoch(train) [10][20/23]  lr: 1.5625e-04  eta: 0:41:48  time: 3.6834  data_time: 3.2440  memory: 1392  loss: 1.0020  loss_cls: 0.7692  loss_bbox: 0.2328
2023/06/09 08:11:44 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:11:44 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/09 08:11:49 - mmengine - INFO - Epoch(val) [10][ 5/56]    eta: 0:00:21  time: 0.4123  data_time: 0.2289  memory: 1392  
2023/06/09 08:11:50 - mmengine - INFO - Epoch(val) [10][10/56]    eta: 0:00:15  time: 0.3290  data_time: 0.1882  memory: 213  
2023/06/09 08:11:51 - mmengine - INFO - Epoch(val) [10][15/56]    eta: 0:00:11  time: 0.2837  data_time: 0.1691  memory: 213  
2023/06/09 08:11:52 - mmengine - INFO - Epoch(val) [10][20/56]    eta: 0:00:09  time: 0.2529  data_time: 0.1477  memory: 213  
2023/06/09 08:11:52 - mmengine - INFO - Epoch(val) [10][25/56]    eta: 0:00:07  time: 0.2365  data_time: 0.1364  memory: 213  
2023/06/09 08:11:53 - mmengine - INFO - Epoch(val) [10][30/56]    eta: 0:00:05  time: 0.2306  data_time: 0.1361  memory: 213  
2023/06/09 08:11:54 - mmengine - INFO - Epoch(val) [10][35/56]    eta: 0:00:04  time: 0.2272  data_time: 0.1339  memory: 213  
2023/06/09 08:11:55 - mmengine - INFO - Epoch(val) [10][40/56]    eta: 0:00:03  time: 0.2171  data_time: 0.1247  memory: 213  
2023/06/09 08:11:56 - mmengine - INFO - Epoch(val) [10][45/56]    eta: 0:00:02  time: 0.2139  data_time: 0.1226  memory: 213  
2023/06/09 08:11:57 - mmengine - INFO - Epoch(val) [10][50/56]    eta: 0:00:01  time: 0.2097  data_time: 0.1198  memory: 213  
2023/06/09 08:11:58 - mmengine - INFO - Epoch(val) [10][55/56]    eta: 0:00:00  time: 0.1861  data_time: 0.1076  memory: 213  
2023/06/09 08:11:58 - mmengine - INFO - Evaluating bbox...
2023/06/09 08:11:59 - mmengine - INFO - bbox_mAP_copypaste: 0.590 0.657 0.650 -1.000 -1.000 0.590
2023/06/09 08:11:59 - mmengine - INFO - Epoch(val) [10][56/56]  coco/bbox_mAP: 0.5900  coco/bbox_mAP_50: 0.6570  coco/bbox_mAP_75: 0.6500  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5900  data_time: 0.1087  time: 0.1860
2023/06/09 08:12:01 - mmengine - INFO - The best checkpoint with 0.5900 coco/bbox_mAP at 10 epoch is saved to best_coco/bbox_mAP_epoch_10.pth.
2023/06/09 08:12:26 - mmengine - INFO - Epoch(train) [11][ 5/23]  lr: 1.5625e-04  eta: 0:41:24  time: 3.6719  data_time: 3.2293  memory: 1392  loss: 0.9819  loss_cls: 0.7492  loss_bbox: 0.2328
2023/06/09 08:12:41 - mmengine - INFO - Epoch(train) [11][10/23]  lr: 1.5625e-04  eta: 0:40:57  time: 3.6616  data_time: 3.2173  memory: 1392  loss: 0.9687  loss_cls: 0.7381  loss_bbox: 0.2305
2023/06/09 08:13:02 - mmengine - INFO - Epoch(train) [11][15/23]  lr: 1.5625e-04  eta: 0:40:46  time: 3.6166  data_time: 3.1756  memory: 1392  loss: 0.9639  loss_cls: 0.7340  loss_bbox: 0.2299
2023/06/09 08:13:18 - mmengine - INFO - Epoch(train) [11][20/23]  lr: 1.5625e-04  eta: 0:40:23  time: 3.6356  data_time: 3.1945  memory: 1392  loss: 0.9525  loss_cls: 0.7232  loss_bbox: 0.2293
2023/06/09 08:13:29 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:13:49 - mmengine - INFO - Epoch(train) [12][ 5/23]  lr: 1.5625e-04  eta: 0:39:59  time: 3.6678  data_time: 3.2271  memory: 1392  loss: 0.9312  loss_cls: 0.7045  loss_bbox: 0.2267
2023/06/09 08:14:06 - mmengine - INFO - Epoch(train) [12][10/23]  lr: 1.5625e-04  eta: 0:39:38  time: 3.6687  data_time: 3.2415  memory: 1392  loss: 0.9216  loss_cls: 0.6951  loss_bbox: 0.2265
2023/06/09 08:14:28 - mmengine - INFO - Epoch(train) [12][15/23]  lr: 1.5625e-04  eta: 0:39:29  time: 3.7607  data_time: 3.3359  memory: 1392  loss: 0.9132  loss_cls: 0.6871  loss_bbox: 0.2262
2023/06/09 08:14:43 - mmengine - INFO - Epoch(train) [12][20/23]  lr: 1.5625e-04  eta: 0:39:03  time: 3.6624  data_time: 3.2396  memory: 1392  loss: 0.8949  loss_cls: 0.6723  loss_bbox: 0.2226
2023/06/09 08:14:52 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:15:12 - mmengine - INFO - Epoch(train) [13][ 5/23]  lr: 1.5625e-04  eta: 0:38:36  time: 3.6313  data_time: 3.2164  memory: 1392  loss: 0.8693  loss_cls: 0.6519  loss_bbox: 0.2174
2023/06/09 08:15:27 - mmengine - INFO - Epoch(train) [13][10/23]  lr: 1.5625e-04  eta: 0:38:10  time: 3.6136  data_time: 3.2041  memory: 1392  loss: 0.8560  loss_cls: 0.6409  loss_bbox: 0.2151
2023/06/09 08:15:49 - mmengine - INFO - Epoch(train) [13][15/23]  lr: 1.5625e-04  eta: 0:38:01  time: 3.6609  data_time: 3.2557  memory: 1392  loss: 0.8494  loss_cls: 0.6348  loss_bbox: 0.2145
2023/06/09 08:16:06 - mmengine - INFO - Epoch(train) [13][20/23]  lr: 1.5625e-04  eta: 0:37:39  time: 3.6726  data_time: 3.2632  memory: 1392  loss: 0.8342  loss_cls: 0.6233  loss_bbox: 0.2109
2023/06/09 08:16:14 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:16:37 - mmengine - INFO - Epoch(train) [14][ 5/23]  lr: 1.5625e-04  eta: 0:37:15  time: 3.6444  data_time: 3.2387  memory: 1392  loss: 0.8105  loss_cls: 0.6046  loss_bbox: 0.2059
2023/06/09 08:16:52 - mmengine - INFO - Epoch(train) [14][10/23]  lr: 1.5625e-04  eta: 0:36:51  time: 3.6366  data_time: 3.2268  memory: 1392  loss: 0.8023  loss_cls: 0.5955  loss_bbox: 0.2068
2023/06/09 08:17:12 - mmengine - INFO - Epoch(train) [14][15/23]  lr: 1.5625e-04  eta: 0:36:37  time: 3.5805  data_time: 3.1655  memory: 1392  loss: 0.7937  loss_cls: 0.5864  loss_bbox: 0.2073
2023/06/09 08:17:28 - mmengine - INFO - Epoch(train) [14][20/23]  lr: 1.5625e-04  eta: 0:36:14  time: 3.5551  data_time: 3.1362  memory: 1392  loss: 0.7862  loss_cls: 0.5805  loss_bbox: 0.2057
2023/06/09 08:17:39 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:18:00 - mmengine - INFO - Epoch(train) [15][ 5/23]  lr: 1.5625e-04  eta: 0:35:51  time: 3.6009  data_time: 3.1855  memory: 1392  loss: 0.7723  loss_cls: 0.5672  loss_bbox: 0.2051
2023/06/09 08:18:15 - mmengine - INFO - Epoch(train) [15][10/23]  lr: 1.5625e-04  eta: 0:35:27  time: 3.6410  data_time: 3.2217  memory: 1392  loss: 0.7633  loss_cls: 0.5604  loss_bbox: 0.2029
2023/06/09 08:18:35 - mmengine - INFO - Epoch(train) [15][15/23]  lr: 1.5625e-04  eta: 0:35:12  time: 3.6014  data_time: 3.1750  memory: 1392  loss: 0.7620  loss_cls: 0.5592  loss_bbox: 0.2028
2023/06/09 08:18:50 - mmengine - INFO - Epoch(train) [15][20/23]  lr: 1.5625e-04  eta: 0:34:49  time: 3.6120  data_time: 3.1829  memory: 1392  loss: 0.7495  loss_cls: 0.5488  loss_bbox: 0.2008
2023/06/09 08:19:01 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:19:21 - mmengine - INFO - Epoch(train) [16][ 5/23]  lr: 1.5625e-04  eta: 0:34:24  time: 3.5785  data_time: 3.1462  memory: 1392  loss: 0.7467  loss_cls: 0.5413  loss_bbox: 0.2054
2023/06/09 08:19:38 - mmengine - INFO - Epoch(train) [16][10/23]  lr: 1.5625e-04  eta: 0:34:03  time: 3.6028  data_time: 3.1743  memory: 1392  loss: 0.7445  loss_cls: 0.5377  loss_bbox: 0.2068
2023/06/09 08:19:56 - mmengine - INFO - Epoch(train) [16][15/23]  lr: 1.5625e-04  eta: 0:33:45  time: 3.5625  data_time: 3.1278  memory: 1392  loss: 0.7298  loss_cls: 0.5268  loss_bbox: 0.2030
2023/06/09 08:20:12 - mmengine - INFO - Epoch(train) [16][20/23]  lr: 1.5625e-04  eta: 0:33:23  time: 3.5778  data_time: 3.1371  memory: 1392  loss: 0.7229  loss_cls: 0.5211  loss_bbox: 0.2018
2023/06/09 08:20:22 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:20:46 - mmengine - INFO - Epoch(train) [17][ 5/23]  lr: 1.5625e-04  eta: 0:33:03  time: 3.6033  data_time: 3.1677  memory: 1392  loss: 0.7037  loss_cls: 0.5045  loss_bbox: 0.1992
2023/06/09 08:21:04 - mmengine - INFO - Epoch(train) [17][10/23]  lr: 1.5625e-04  eta: 0:32:45  time: 3.6737  data_time: 3.2296  memory: 1392  loss: 0.6991  loss_cls: 0.5002  loss_bbox: 0.1990
2023/06/09 08:21:24 - mmengine - INFO - Epoch(train) [17][15/23]  lr: 1.5625e-04  eta: 0:32:29  time: 3.6676  data_time: 3.2271  memory: 1392  loss: 0.6932  loss_cls: 0.4926  loss_bbox: 0.2006
2023/06/09 08:21:40 - mmengine - INFO - Epoch(train) [17][20/23]  lr: 1.5625e-04  eta: 0:32:07  time: 3.6846  data_time: 3.2450  memory: 1392  loss: 0.6854  loss_cls: 0.4850  loss_bbox: 0.2004
2023/06/09 08:21:46 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:22:08 - mmengine - INFO - Epoch(train) [18][ 5/23]  lr: 1.5625e-04  eta: 0:31:37  time: 3.6269  data_time: 3.1954  memory: 1392  loss: 0.6747  loss_cls: 0.4754  loss_bbox: 0.1993
2023/06/09 08:22:22 - mmengine - INFO - Epoch(train) [18][10/23]  lr: 1.5625e-04  eta: 0:31:14  time: 3.6089  data_time: 3.1629  memory: 1392  loss: 0.6646  loss_cls: 0.4677  loss_bbox: 0.1969
2023/06/09 08:22:43 - mmengine - INFO - Epoch(train) [18][15/23]  lr: 1.5625e-04  eta: 0:31:00  time: 3.5944  data_time: 3.1482  memory: 1392  loss: 0.6534  loss_cls: 0.4574  loss_bbox: 0.1960
2023/06/09 08:23:01 - mmengine - INFO - Epoch(train) [18][20/23]  lr: 1.5625e-04  eta: 0:30:41  time: 3.6538  data_time: 3.2163  memory: 1392  loss: 0.6404  loss_cls: 0.4469  loss_bbox: 0.1935
2023/06/09 08:23:07 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:23:31 - mmengine - INFO - Epoch(train) [19][ 5/23]  lr: 1.5625e-04  eta: 0:30:14  time: 3.6165  data_time: 3.1852  memory: 1392  loss: 0.6326  loss_cls: 0.4401  loss_bbox: 0.1925
2023/06/09 08:23:46 - mmengine - INFO - Epoch(train) [19][10/23]  lr: 1.5625e-04  eta: 0:29:52  time: 3.5897  data_time: 3.1663  memory: 1392  loss: 0.6254  loss_cls: 0.4342  loss_bbox: 0.1913
2023/06/09 08:24:06 - mmengine - INFO - Epoch(train) [19][15/23]  lr: 1.5625e-04  eta: 0:29:36  time: 3.5202  data_time: 3.0956  memory: 1392  loss: 0.6285  loss_cls: 0.4351  loss_bbox: 0.1933
2023/06/09 08:24:21 - mmengine - INFO - Epoch(train) [19][20/23]  lr: 1.5625e-04  eta: 0:29:14  time: 3.5225  data_time: 3.0989  memory: 1392  loss: 0.6136  loss_cls: 0.4242  loss_bbox: 0.1894
2023/06/09 08:24:30 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:24:52 - mmengine - INFO - Epoch(train) [20][ 5/23]  lr: 1.5625e-04  eta: 0:28:48  time: 3.5523  data_time: 3.1226  memory: 1392  loss: 0.5961  loss_cls: 0.4078  loss_bbox: 0.1883
2023/06/09 08:25:08 - mmengine - INFO - Epoch(train) [20][10/23]  lr: 1.5625e-04  eta: 0:28:28  time: 3.5979  data_time: 3.1663  memory: 1392  loss: 0.5918  loss_cls: 0.4055  loss_bbox: 0.1862
2023/06/09 08:25:30 - mmengine - INFO - Epoch(train) [20][15/23]  lr: 1.5625e-04  eta: 0:28:13  time: 3.6148  data_time: 3.1796  memory: 1392  loss: 0.5846  loss_cls: 0.3987  loss_bbox: 0.1859
2023/06/09 08:25:46 - mmengine - INFO - Epoch(train) [20][20/23]  lr: 1.5625e-04  eta: 0:27:53  time: 3.6202  data_time: 3.1778  memory: 1392  loss: 0.5907  loss_cls: 0.4028  loss_bbox: 0.1879
2023/06/09 08:25:54 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:25:54 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/09 08:25:57 - mmengine - INFO - Epoch(val) [20][ 5/56]    eta: 0:00:13  time: 0.1857  data_time: 0.1085  memory: 1392  
2023/06/09 08:25:57 - mmengine - INFO - Epoch(val) [20][10/56]    eta: 0:00:09  time: 0.1832  data_time: 0.1043  memory: 213  
2023/06/09 08:25:58 - mmengine - INFO - Epoch(val) [20][15/56]    eta: 0:00:08  time: 0.1886  data_time: 0.1083  memory: 213  
2023/06/09 08:25:59 - mmengine - INFO - Epoch(val) [20][20/56]    eta: 0:00:07  time: 0.1850  data_time: 0.1041  memory: 213  
2023/06/09 08:26:00 - mmengine - INFO - Epoch(val) [20][25/56]    eta: 0:00:05  time: 0.1826  data_time: 0.1011  memory: 213  
2023/06/09 08:26:02 - mmengine - INFO - Epoch(val) [20][30/56]    eta: 0:00:05  time: 0.1984  data_time: 0.1153  memory: 213  
2023/06/09 08:26:03 - mmengine - INFO - Epoch(val) [20][35/56]    eta: 0:00:04  time: 0.2035  data_time: 0.1170  memory: 213  
2023/06/09 08:26:05 - mmengine - INFO - Epoch(val) [20][40/56]    eta: 0:00:03  time: 0.2191  data_time: 0.1313  memory: 213  
2023/06/09 08:26:06 - mmengine - INFO - Epoch(val) [20][45/56]    eta: 0:00:02  time: 0.2259  data_time: 0.1332  memory: 213  
2023/06/09 08:26:07 - mmengine - INFO - Epoch(val) [20][50/56]    eta: 0:00:01  time: 0.2358  data_time: 0.1416  memory: 213  
2023/06/09 08:26:08 - mmengine - INFO - Epoch(val) [20][55/56]    eta: 0:00:00  time: 0.2245  data_time: 0.1319  memory: 213  
2023/06/09 08:26:08 - mmengine - INFO - Evaluating bbox...
2023/06/09 08:26:09 - mmengine - INFO - bbox_mAP_copypaste: 0.906 0.981 0.981 -1.000 -1.000 0.906
2023/06/09 08:26:09 - mmengine - INFO - Epoch(val) [20][56/56]  coco/bbox_mAP: 0.9060  coco/bbox_mAP_50: 0.9810  coco/bbox_mAP_75: 0.9810  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9060  data_time: 0.1348  time: 0.2269
2023/06/09 08:26:09 - mmengine - INFO - The previous best checkpoint /content/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drink/best_coco/bbox_mAP_epoch_10.pth is removed
2023/06/09 08:26:10 - mmengine - INFO - The best checkpoint with 0.9060 coco/bbox_mAP at 20 epoch is saved to best_coco/bbox_mAP_epoch_20.pth.
2023/06/09 08:26:32 - mmengine - INFO - Epoch(train) [21][ 5/23]  lr: 1.5622e-04  eta: 0:27:25  time: 3.5865  data_time: 3.1416  memory: 1392  loss: 0.5828  loss_cls: 0.3963  loss_bbox: 0.1864
2023/06/09 08:26:49 - mmengine - INFO - Epoch(train) [21][10/23]  lr: 1.5611e-04  eta: 0:27:05  time: 3.6055  data_time: 3.1568  memory: 1392  loss: 0.5789  loss_cls: 0.3925  loss_bbox: 0.1863
2023/06/09 08:27:11 - mmengine - INFO - Epoch(train) [21][15/23]  lr: 1.5591e-04  eta: 0:26:52  time: 3.6717  data_time: 3.2211  memory: 1392  loss: 0.5766  loss_cls: 0.3905  loss_bbox: 0.1860
2023/06/09 08:27:27 - mmengine - INFO - Epoch(train) [21][20/23]  lr: 1.5563e-04  eta: 0:26:32  time: 3.6898  data_time: 3.2404  memory: 1392  loss: 0.5644  loss_cls: 0.3806  loss_bbox: 0.1838
2023/06/09 08:27:37 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:28:00 - mmengine - INFO - Epoch(train) [22][ 5/23]  lr: 1.5499e-04  eta: 0:26:05  time: 3.7158  data_time: 3.2646  memory: 1392  loss: 0.5637  loss_cls: 0.3800  loss_bbox: 0.1837
2023/06/09 08:28:14 - mmengine - INFO - Epoch(train) [22][10/23]  lr: 1.5448e-04  eta: 0:25:44  time: 3.7052  data_time: 3.2684  memory: 1392  loss: 0.5648  loss_cls: 0.3799  loss_bbox: 0.1849
2023/06/09 08:28:34 - mmengine - INFO - Epoch(train) [22][15/23]  lr: 1.5389e-04  eta: 0:25:27  time: 3.6336  data_time: 3.2014  memory: 1392  loss: 0.5574  loss_cls: 0.3739  loss_bbox: 0.1835
2023/06/09 08:28:49 - mmengine - INFO - Epoch(train) [22][20/23]  lr: 1.5322e-04  eta: 0:25:07  time: 3.6313  data_time: 3.2059  memory: 1392  loss: 0.5581  loss_cls: 0.3735  loss_bbox: 0.1846
2023/06/09 08:28:58 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:29:19 - mmengine - INFO - Epoch(train) [23][ 5/23]  lr: 1.5196e-04  eta: 0:24:39  time: 3.6477  data_time: 3.2140  memory: 1392  loss: 0.5542  loss_cls: 0.3681  loss_bbox: 0.1861
2023/06/09 08:29:34 - mmengine - INFO - Epoch(train) [23][10/23]  lr: 1.5108e-04  eta: 0:24:19  time: 3.6199  data_time: 3.1913  memory: 1392  loss: 0.5544  loss_cls: 0.3664  loss_bbox: 0.1880
2023/06/09 08:29:55 - mmengine - INFO - Epoch(train) [23][15/23]  lr: 1.5011e-04  eta: 0:24:03  time: 3.5821  data_time: 3.1585  memory: 1392  loss: 0.5540  loss_cls: 0.3655  loss_bbox: 0.1885
2023/06/09 08:30:13 - mmengine - INFO - Epoch(train) [23][20/23]  lr: 1.4906e-04  eta: 0:23:44  time: 3.6156  data_time: 3.1910  memory: 1392  loss: 0.5529  loss_cls: 0.3643  loss_bbox: 0.1886
2023/06/09 08:30:23 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:30:47 - mmengine - INFO - Epoch(train) [24][ 5/23]  lr: 1.4722e-04  eta: 0:23:19  time: 3.6448  data_time: 3.2171  memory: 1392  loss: 0.5384  loss_cls: 0.3531  loss_bbox: 0.1853
2023/06/09 08:31:03 - mmengine - INFO - Epoch(train) [24][10/23]  lr: 1.4597e-04  eta: 0:23:00  time: 3.6640  data_time: 3.2309  memory: 1392  loss: 0.5400  loss_cls: 0.3533  loss_bbox: 0.1867
2023/06/09 08:31:27 - mmengine - INFO - Epoch(train) [24][15/23]  lr: 1.4464e-04  eta: 0:22:46  time: 3.7385  data_time: 3.3012  memory: 1392  loss: 0.5430  loss_cls: 0.3558  loss_bbox: 0.1872
2023/06/09 08:31:42 - mmengine - INFO - Epoch(train) [24][20/23]  lr: 1.4324e-04  eta: 0:22:25  time: 3.7501  data_time: 3.3114  memory: 1392  loss: 0.5393  loss_cls: 0.3534  loss_bbox: 0.1859
2023/06/09 08:31:49 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:32:10 - mmengine - INFO - Epoch(train) [25][ 5/23]  lr: 1.4086e-04  eta: 0:21:56  time: 3.7150  data_time: 3.2853  memory: 1392  loss: 0.5379  loss_cls: 0.3533  loss_bbox: 0.1846
2023/06/09 08:32:25 - mmengine - INFO - Epoch(train) [25][10/23]  lr: 1.3928e-04  eta: 0:21:35  time: 3.7068  data_time: 3.2801  memory: 1392  loss: 0.5233  loss_cls: 0.3438  loss_bbox: 0.1795
2023/06/09 08:32:46 - mmengine - INFO - Epoch(train) [25][15/23]  lr: 1.3764e-04  eta: 0:21:19  time: 3.7076  data_time: 3.2868  memory: 1392  loss: 0.5199  loss_cls: 0.3402  loss_bbox: 0.1797
2023/06/09 08:33:00 - mmengine - INFO - Epoch(train) [25][20/23]  lr: 1.3593e-04  eta: 0:20:58  time: 3.6866  data_time: 3.2623  memory: 1392  loss: 0.5133  loss_cls: 0.3353  loss_bbox: 0.1780
2023/06/09 08:33:09 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:33:30 - mmengine - INFO - Epoch(train) [26][ 5/23]  lr: 1.3306e-04  eta: 0:20:30  time: 3.6129  data_time: 3.1800  memory: 1392  loss: 0.5195  loss_cls: 0.3388  loss_bbox: 0.1808
2023/06/09 08:33:46 - mmengine - INFO - Epoch(train) [26][10/23]  lr: 1.3119e-04  eta: 0:20:11  time: 3.5800  data_time: 3.1462  memory: 1392  loss: 0.5192  loss_cls: 0.3381  loss_bbox: 0.1811
2023/06/09 08:34:07 - mmengine - INFO - Epoch(train) [26][15/23]  lr: 1.2926e-04  eta: 0:19:54  time: 3.4758  data_time: 3.0449  memory: 1392  loss: 0.5116  loss_cls: 0.3324  loss_bbox: 0.1792
2023/06/09 08:34:21 - mmengine - INFO - Epoch(train) [26][20/23]  lr: 1.2728e-04  eta: 0:19:34  time: 3.4703  data_time: 3.0457  memory: 1392  loss: 0.5062  loss_cls: 0.3273  loss_bbox: 0.1789
2023/06/09 08:34:31 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:34:53 - mmengine - INFO - Epoch(train) [27][ 5/23]  lr: 1.2400e-04  eta: 0:19:07  time: 3.5478  data_time: 3.1203  memory: 1392  loss: 0.5069  loss_cls: 0.3258  loss_bbox: 0.1811
2023/06/09 08:35:08 - mmengine - INFO - Epoch(train) [27][10/23]  lr: 1.2189e-04  eta: 0:18:47  time: 3.5436  data_time: 3.1221  memory: 1392  loss: 0.5050  loss_cls: 0.3238  loss_bbox: 0.1812
2023/06/09 08:35:30 - mmengine - INFO - Epoch(train) [27][15/23]  lr: 1.1972e-04  eta: 0:18:31  time: 3.5881  data_time: 3.1650  memory: 1392  loss: 0.5096  loss_cls: 0.3271  loss_bbox: 0.1826
2023/06/09 08:35:47 - mmengine - INFO - Epoch(train) [27][20/23]  lr: 1.1752e-04  eta: 0:18:12  time: 3.6109  data_time: 3.1743  memory: 1392  loss: 0.4998  loss_cls: 0.3195  loss_bbox: 0.1803
2023/06/09 08:35:55 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:36:19 - mmengine - INFO - Epoch(train) [28][ 5/23]  lr: 1.1391e-04  eta: 0:17:45  time: 3.6642  data_time: 3.2357  memory: 1392  loss: 0.4913  loss_cls: 0.3122  loss_bbox: 0.1791
2023/06/09 08:36:34 - mmengine - INFO - Epoch(train) [28][10/23]  lr: 1.1160e-04  eta: 0:17:25  time: 3.6597  data_time: 3.2284  memory: 1392  loss: 0.4943  loss_cls: 0.3140  loss_bbox: 0.1803
2023/06/09 08:36:55 - mmengine - INFO - Epoch(train) [28][15/23]  lr: 1.0926e-04  eta: 0:17:08  time: 3.6548  data_time: 3.2201  memory: 1392  loss: 0.4947  loss_cls: 0.3136  loss_bbox: 0.1810
2023/06/09 08:37:09 - mmengine - INFO - Epoch(train) [28][20/23]  lr: 1.0689e-04  eta: 0:16:49  time: 3.6385  data_time: 3.2049  memory: 1392  loss: 0.4932  loss_cls: 0.3119  loss_bbox: 0.1814
2023/06/09 08:37:18 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:37:41 - mmengine - INFO - Epoch(train) [29][ 5/23]  lr: 1.0303e-04  eta: 0:16:21  time: 3.6526  data_time: 3.2216  memory: 1392  loss: 0.4809  loss_cls: 0.3028  loss_bbox: 0.1781
2023/06/09 08:37:56 - mmengine - INFO - Epoch(train) [29][10/23]  lr: 1.0059e-04  eta: 0:16:02  time: 3.6557  data_time: 3.2201  memory: 1392  loss: 0.4851  loss_cls: 0.3052  loss_bbox: 0.1799
2023/06/09 08:38:18 - mmengine - INFO - Epoch(train) [29][15/23]  lr: 9.8123e-05  eta: 0:15:45  time: 3.6385  data_time: 3.1966  memory: 1392  loss: 0.4849  loss_cls: 0.3046  loss_bbox: 0.1802
2023/06/09 08:38:32 - mmengine - INFO - Epoch(train) [29][20/23]  lr: 9.5640e-05  eta: 0:15:25  time: 3.6347  data_time: 3.2035  memory: 1392  loss: 0.4888  loss_cls: 0.3063  loss_bbox: 0.1826
2023/06/09 08:38:41 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:39:02 - mmengine - INFO - Epoch(train) [30][ 5/23]  lr: 9.1635e-05  eta: 0:14:57  time: 3.5593  data_time: 3.1394  memory: 1392  loss: 0.4973  loss_cls: 0.3126  loss_bbox: 0.1848
2023/06/09 08:39:17 - mmengine - INFO - Epoch(train) [30][10/23]  lr: 8.9117e-05  eta: 0:14:38  time: 3.5467  data_time: 3.1216  memory: 1392  loss: 0.4951  loss_cls: 0.3112  loss_bbox: 0.1839
2023/06/09 08:39:37 - mmengine - INFO - Epoch(train) [30][15/23]  lr: 8.6590e-05  eta: 0:14:20  time: 3.5362  data_time: 3.1184  memory: 1392  loss: 0.4906  loss_cls: 0.3083  loss_bbox: 0.1823
2023/06/09 08:39:53 - mmengine - INFO - Epoch(train) [30][20/23]  lr: 8.4059e-05  eta: 0:14:01  time: 3.5537  data_time: 3.1455  memory: 1392  loss: 0.4959  loss_cls: 0.3128  loss_bbox: 0.1830
2023/06/09 08:40:04 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:40:04 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/09 08:40:07 - mmengine - INFO - Epoch(val) [30][ 5/56]    eta: 0:00:12  time: 0.2326  data_time: 0.1421  memory: 1392  
2023/06/09 08:40:08 - mmengine - INFO - Epoch(val) [30][10/56]    eta: 0:00:09  time: 0.2335  data_time: 0.1430  memory: 213  
2023/06/09 08:40:08 - mmengine - INFO - Epoch(val) [30][15/56]    eta: 0:00:07  time: 0.2329  data_time: 0.1423  memory: 213  
2023/06/09 08:40:10 - mmengine - INFO - Epoch(val) [30][20/56]    eta: 0:00:07  time: 0.2345  data_time: 0.1423  memory: 213  
2023/06/09 08:40:11 - mmengine - INFO - Epoch(val) [30][25/56]    eta: 0:00:06  time: 0.2338  data_time: 0.1406  memory: 213  
2023/06/09 08:40:13 - mmengine - INFO - Epoch(val) [30][30/56]    eta: 0:00:06  time: 0.2426  data_time: 0.1495  memory: 213  
2023/06/09 08:40:14 - mmengine - INFO - Epoch(val) [30][35/56]    eta: 0:00:05  time: 0.2426  data_time: 0.1489  memory: 213  
2023/06/09 08:40:16 - mmengine - INFO - Epoch(val) [30][40/56]    eta: 0:00:04  time: 0.2406  data_time: 0.1483  memory: 213  
2023/06/09 08:40:16 - mmengine - INFO - Epoch(val) [30][45/56]    eta: 0:00:02  time: 0.2332  data_time: 0.1415  memory: 213  
2023/06/09 08:40:17 - mmengine - INFO - Epoch(val) [30][50/56]    eta: 0:00:01  time: 0.2365  data_time: 0.1450  memory: 213  
2023/06/09 08:40:18 - mmengine - INFO - Epoch(val) [30][55/56]    eta: 0:00:00  time: 0.2266  data_time: 0.1369  memory: 213  
2023/06/09 08:40:19 - mmengine - INFO - Evaluating bbox...
2023/06/09 08:40:19 - mmengine - INFO - bbox_mAP_copypaste: 0.920 0.992 0.992 -1.000 -1.000 0.920
2023/06/09 08:40:19 - mmengine - INFO - Epoch(val) [30][56/56]  coco/bbox_mAP: 0.9200  coco/bbox_mAP_50: 0.9920  coco/bbox_mAP_75: 0.9920  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9200  data_time: 0.1396  time: 0.2284
2023/06/09 08:40:19 - mmengine - INFO - The previous best checkpoint /content/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drink/best_coco/bbox_mAP_epoch_20.pth is removed
2023/06/09 08:40:21 - mmengine - INFO - The best checkpoint with 0.9200 coco/bbox_mAP at 30 epoch is saved to best_coco/bbox_mAP_epoch_30.pth.
2023/06/09 08:40:41 - mmengine - INFO - Epoch(train) [31][ 5/23]  lr: 8.0004e-05  eta: 0:13:33  time: 3.5584  data_time: 3.1482  memory: 1392  loss: 0.4948  loss_cls: 0.3128  loss_bbox: 0.1820
2023/06/09 08:40:55 - mmengine - INFO - Epoch(train) [31][10/23]  lr: 7.7472e-05  eta: 0:13:14  time: 3.5420  data_time: 3.1320  memory: 1392  loss: 0.4937  loss_cls: 0.3129  loss_bbox: 0.1808
2023/06/09 08:41:16 - mmengine - INFO - Epoch(train) [31][15/23]  lr: 7.4946e-05  eta: 0:12:57  time: 3.5269  data_time: 3.1123  memory: 1392  loss: 0.4931  loss_cls: 0.3118  loss_bbox: 0.1813
2023/06/09 08:41:31 - mmengine - INFO - Epoch(train) [31][20/23]  lr: 7.2428e-05  eta: 0:12:38  time: 3.5350  data_time: 3.1096  memory: 1392  loss: 0.4928  loss_cls: 0.3117  loss_bbox: 0.1810
2023/06/09 08:41:42 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:42:03 - mmengine - INFO - Epoch(train) [32][ 5/23]  lr: 6.8423e-05  eta: 0:12:10  time: 3.5931  data_time: 3.1563  memory: 1392  loss: 0.4804  loss_cls: 0.3039  loss_bbox: 0.1766
2023/06/09 08:42:21 - mmengine - INFO - Epoch(train) [32][10/23]  lr: 6.5940e-05  eta: 0:11:52  time: 3.6399  data_time: 3.1870  memory: 1392  loss: 0.4765  loss_cls: 0.3022  loss_bbox: 0.1742
2023/06/09 08:42:40 - mmengine - INFO - Epoch(train) [32][15/23]  lr: 6.3476e-05  eta: 0:11:34  time: 3.6079  data_time: 3.1607  memory: 1392  loss: 0.4749  loss_cls: 0.3013  loss_bbox: 0.1737
2023/06/09 08:42:57 - mmengine - INFO - Epoch(train) [32][20/23]  lr: 6.1033e-05  eta: 0:11:15  time: 3.6493  data_time: 3.2044  memory: 1392  loss: 0.4787  loss_cls: 0.3044  loss_bbox: 0.1743
2023/06/09 08:43:04 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:43:25 - mmengine - INFO - Epoch(train) [33][ 5/23]  lr: 5.7177e-05  eta: 0:10:46  time: 3.5594  data_time: 3.1101  memory: 1392  loss: 0.4754  loss_cls: 0.3015  loss_bbox: 0.1739
2023/06/09 08:43:42 - mmengine - INFO - Epoch(train) [33][10/23]  lr: 5.4804e-05  eta: 0:10:28  time: 3.6111  data_time: 3.1594  memory: 1392  loss: 0.4799  loss_cls: 0.3041  loss_bbox: 0.1758
2023/06/09 08:44:01 - mmengine - INFO - Epoch(train) [33][15/23]  lr: 5.2462e-05  eta: 0:10:10  time: 3.5517  data_time: 3.1025  memory: 1392  loss: 0.4810  loss_cls: 0.3048  loss_bbox: 0.1762
2023/06/09 08:44:18 - mmengine - INFO - Epoch(train) [33][20/23]  lr: 5.0156e-05  eta: 0:09:52  time: 3.5968  data_time: 3.1545  memory: 1392  loss: 0.4801  loss_cls: 0.3046  loss_bbox: 0.1755
2023/06/09 08:44:25 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:44:48 - mmengine - INFO - Epoch(train) [34][ 5/23]  lr: 4.6543e-05  eta: 0:09:23  time: 3.5259  data_time: 3.0855  memory: 1392  loss: 0.4786  loss_cls: 0.3034  loss_bbox: 0.1753
2023/06/09 08:45:05 - mmengine - INFO - Epoch(train) [34][10/23]  lr: 4.4338e-05  eta: 0:09:05  time: 3.6069  data_time: 3.1686  memory: 1392  loss: 0.4838  loss_cls: 0.3071  loss_bbox: 0.1767
2023/06/09 08:45:22 - mmengine - INFO - Epoch(train) [34][15/23]  lr: 4.2177e-05  eta: 0:08:47  time: 3.5198  data_time: 3.0864  memory: 1392  loss: 0.4784  loss_cls: 0.3018  loss_bbox: 0.1766
2023/06/09 08:45:39 - mmengine - INFO - Epoch(train) [34][20/23]  lr: 4.0063e-05  eta: 0:08:28  time: 3.5571  data_time: 3.1201  memory: 1392  loss: 0.4791  loss_cls: 0.3016  loss_bbox: 0.1775
2023/06/09 08:45:49 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:46:10 - mmengine - INFO - Epoch(train) [35][ 5/23]  lr: 3.6783e-05  eta: 0:08:00  time: 3.5559  data_time: 3.1126  memory: 1392  loss: 0.4791  loss_cls: 0.3019  loss_bbox: 0.1772
2023/06/09 08:46:28 - mmengine - INFO - Epoch(train) [35][10/23]  lr: 3.4801e-05  eta: 0:07:42  time: 3.6072  data_time: 3.1694  memory: 1392  loss: 0.4809  loss_cls: 0.3046  loss_bbox: 0.1763
2023/06/09 08:46:47 - mmengine - INFO - Epoch(train) [35][15/23]  lr: 3.2874e-05  eta: 0:07:24  time: 3.6193  data_time: 3.1855  memory: 1392  loss: 0.4744  loss_cls: 0.2997  loss_bbox: 0.1747
2023/06/09 08:47:04 - mmengine - INFO - Epoch(train) [35][20/23]  lr: 3.1004e-05  eta: 0:07:06  time: 3.6312  data_time: 3.1938  memory: 1392  loss: 0.4689  loss_cls: 0.2960  loss_bbox: 0.1729
2023/06/09 08:47:11 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:47:11 - mmengine - INFO - Switch pipeline now!
2023/06/09 08:47:23 - mmengine - INFO - Epoch(train) [36][ 5/23]  lr: 2.8137e-05  eta: 0:06:35  time: 3.3862  data_time: 2.9520  memory: 1392  loss: 0.4656  loss_cls: 0.2967  loss_bbox: 0.1689
2023/06/09 08:47:33 - mmengine - INFO - Epoch(train) [36][10/23]  lr: 2.6426e-05  eta: 0:06:16  time: 3.2182  data_time: 2.7913  memory: 1392  loss: 0.4590  loss_cls: 0.2936  loss_bbox: 0.1654
2023/06/09 08:47:44 - mmengine - INFO - Epoch(train) [36][15/23]  lr: 2.4780e-05  eta: 0:05:58  time: 3.1034  data_time: 2.6870  memory: 1392  loss: 0.4448  loss_cls: 0.2845  loss_bbox: 0.1603
2023/06/09 08:47:52 - mmengine - INFO - Epoch(train) [36][20/23]  lr: 2.3201e-05  eta: 0:05:39  time: 2.9485  data_time: 2.5413  memory: 1392  loss: 0.4336  loss_cls: 0.2784  loss_bbox: 0.1551
2023/06/09 08:47:57 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:48:09 - mmengine - INFO - Epoch(train) [37][ 5/23]  lr: 2.0818e-05  eta: 0:05:09  time: 2.6766  data_time: 2.2911  memory: 1392  loss: 0.4040  loss_cls: 0.2591  loss_bbox: 0.1449
2023/06/09 08:48:19 - mmengine - INFO - Epoch(train) [37][10/23]  lr: 1.9421e-05  eta: 0:04:50  time: 2.5494  data_time: 2.1628  memory: 1392  loss: 0.3906  loss_cls: 0.2504  loss_bbox: 0.1402
2023/06/09 08:48:31 - mmengine - INFO - Epoch(train) [37][15/23]  lr: 1.8097e-05  eta: 0:04:32  time: 2.3701  data_time: 1.9850  memory: 1392  loss: 0.3778  loss_cls: 0.2416  loss_bbox: 0.1361
2023/06/09 08:48:39 - mmengine - INFO - Epoch(train) [37][20/23]  lr: 1.6847e-05  eta: 0:04:14  time: 2.1837  data_time: 1.8026  memory: 1392  loss: 0.3652  loss_cls: 0.2349  loss_bbox: 0.1303
2023/06/09 08:48:43 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:48:55 - mmengine - INFO - Epoch(train) [38][ 5/23]  lr: 1.5006e-05  eta: 0:03:44  time: 1.9687  data_time: 1.6040  memory: 1392  loss: 0.3361  loss_cls: 0.2157  loss_bbox: 0.1205
2023/06/09 08:49:05 - mmengine - INFO - Epoch(train) [38][10/23]  lr: 1.3957e-05  eta: 0:03:26  time: 2.0158  data_time: 1.6454  memory: 1392  loss: 0.3261  loss_cls: 0.2062  loss_bbox: 0.1199
2023/06/09 08:49:15 - mmengine - INFO - Epoch(train) [38][15/23]  lr: 1.2987e-05  eta: 0:03:08  time: 1.9872  data_time: 1.6143  memory: 1392  loss: 0.3216  loss_cls: 0.2024  loss_bbox: 0.1191
2023/06/09 08:49:24 - mmengine - INFO - Epoch(train) [38][20/23]  lr: 1.2098e-05  eta: 0:02:50  time: 1.9862  data_time: 1.6199  memory: 1392  loss: 0.3236  loss_cls: 0.2045  loss_bbox: 0.1192
2023/06/09 08:49:29 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:49:41 - mmengine - INFO - Epoch(train) [39][ 5/23]  lr: 1.0845e-05  eta: 0:02:22  time: 1.9599  data_time: 1.5855  memory: 1392  loss: 0.3194  loss_cls: 0.2020  loss_bbox: 0.1174
2023/06/09 08:49:50 - mmengine - INFO - Epoch(train) [39][10/23]  lr: 1.0169e-05  eta: 0:02:04  time: 2.0016  data_time: 1.6225  memory: 1392  loss: 0.3167  loss_cls: 0.1994  loss_bbox: 0.1173
2023/06/09 08:50:01 - mmengine - INFO - Epoch(train) [39][15/23]  lr: 9.5779e-06  eta: 0:01:47  time: 1.9731  data_time: 1.6030  memory: 1392  loss: 0.3185  loss_cls: 0.2012  loss_bbox: 0.1173
2023/06/09 08:50:09 - mmengine - INFO - Epoch(train) [39][20/23]  lr: 9.0707e-06  eta: 0:01:29  time: 1.9495  data_time: 1.5878  memory: 1392  loss: 0.3173  loss_cls: 0.1997  loss_bbox: 0.1176
2023/06/09 08:50:15 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:50:24 - mmengine - INFO - Epoch(train) [40][ 5/23]  lr: 8.4365e-06  eta: 0:01:01  time: 1.9184  data_time: 1.5510  memory: 1392  loss: 0.3107  loss_cls: 0.1936  loss_bbox: 0.1171
2023/06/09 08:50:35 - mmengine - INFO - Epoch(train) [40][10/23]  lr: 8.1515e-06  eta: 0:00:44  time: 1.9818  data_time: 1.6124  memory: 1392  loss: 0.3118  loss_cls: 0.1940  loss_bbox: 0.1178
2023/06/09 08:50:45 - mmengine - INFO - Epoch(train) [40][15/23]  lr: 7.9527e-06  eta: 0:00:27  time: 1.9638  data_time: 1.5949  memory: 1392  loss: 0.3071  loss_cls: 0.1903  loss_bbox: 0.1168
2023/06/09 08:50:55 - mmengine - INFO - Epoch(train) [40][20/23]  lr: 7.8402e-06  eta: 0:00:10  time: 1.9604  data_time: 1.5923  memory: 1392  loss: 0.3009  loss_cls: 0.1852  loss_bbox: 0.1157
2023/06/09 08:51:00 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230609_075749
2023/06/09 08:51:00 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/09 08:51:03 - mmengine - INFO - Epoch(val) [40][ 5/56]    eta: 0:00:12  time: 0.2348  data_time: 0.1468  memory: 1392  
2023/06/09 08:51:04 - mmengine - INFO - Epoch(val) [40][10/56]    eta: 0:00:09  time: 0.2318  data_time: 0.1441  memory: 213  
2023/06/09 08:51:05 - mmengine - INFO - Epoch(val) [40][15/56]    eta: 0:00:08  time: 0.2347  data_time: 0.1479  memory: 213  
2023/06/09 08:51:06 - mmengine - INFO - Epoch(val) [40][20/56]    eta: 0:00:07  time: 0.2081  data_time: 0.1265  memory: 213  
2023/06/09 08:51:07 - mmengine - INFO - Epoch(val) [40][25/56]    eta: 0:00:05  time: 0.1954  data_time: 0.1167  memory: 213  
2023/06/09 08:51:08 - mmengine - INFO - Epoch(val) [40][30/56]    eta: 0:00:05  time: 0.1870  data_time: 0.1120  memory: 213  
2023/06/09 08:51:09 - mmengine - INFO - Epoch(val) [40][35/56]    eta: 0:00:04  time: 0.1860  data_time: 0.1107  memory: 213  
2023/06/09 08:51:10 - mmengine - INFO - Epoch(val) [40][40/56]    eta: 0:00:03  time: 0.1836  data_time: 0.1074  memory: 213  
2023/06/09 08:51:11 - mmengine - INFO - Epoch(val) [40][45/56]    eta: 0:00:02  time: 0.1868  data_time: 0.1075  memory: 213  
2023/06/09 08:51:13 - mmengine - INFO - Epoch(val) [40][50/56]    eta: 0:00:01  time: 0.2102  data_time: 0.1237  memory: 213  
2023/06/09 08:51:14 - mmengine - INFO - Epoch(val) [40][55/56]    eta: 0:00:00  time: 0.2077  data_time: 0.1193  memory: 213  
2023/06/09 08:51:15 - mmengine - INFO - Evaluating bbox...
2023/06/09 08:51:15 - mmengine - INFO - bbox_mAP_copypaste: 0.931 0.993 0.993 -1.000 -1.000 0.931
2023/06/09 08:51:15 - mmengine - INFO - Epoch(val) [40][56/56]  coco/bbox_mAP: 0.9310  coco/bbox_mAP_50: 0.9930  coco/bbox_mAP_75: 0.9930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9310  data_time: 0.1226  time: 0.2106
2023/06/09 08:51:15 - mmengine - INFO - The previous best checkpoint /content/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drink/best_coco/bbox_mAP_epoch_30.pth is removed
2023/06/09 08:51:17 - mmengine - INFO - The best checkpoint with 0.9310 coco/bbox_mAP at 40 epoch is saved to best_coco/bbox_mAP_epoch_40.pth.
